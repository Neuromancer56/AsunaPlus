Goblins Relations and Territory storage

Relations are tables that are stored in the mobs self.relations as tables and in the mod data storage as serialized strings
these tables are currently meant to provide a way to show the relations of:

* Mobs to a territory (defined by both the mob and territory secret names generated on spawn)
* Players to a mob (defined by playername and a table of keys/value pairs describing relationship parameters)

In this way way can jump into the table using only the keys of the mob, player and relavent parameters to avoid searches and iterations

   
   sample relation table from self.relations with "Unkadz" as "self.secret_name" and "Khad-glat" as "self.secret_territory" :
  Unkadz = {
    ix = 1588945576,
    Unkadz = "Khad-glat",
    freelikegnu = {
      trade = 52
      aggro = 10
    }
  }

in functions:
Relations should always be checked by the goblins.relations(self, target_name, target_table) function.  
With only the "self" variable defined, this function will check if a relations root table has been established
and create one if not yet existing in both the mobs self.relations table and in the mod storage. 
This function will then return all existing relations as recorded. Use this as a basis to further alter the relations if needed.

With both self and target_name declared (with target_name being that of a player or even the self.secret_name of a mob)
The function will do as above and initialize a relation between self and the target_name entity if none already exists
This function will then return only the existing relations between self and target_name as recorded. Use this as a basis to further alter the relations between two entitities if needed to only edit the keys from the target_name to the self.

Any actual manipulations of existing relationships should be handled by goblins.relations(self, target_name, target_table) with all arguements declared.  This will overwrite any existing value of the target_table that may have been stored in the self.relations[target_name][target_table] , so be sure that you have gathered and altered the table before invoking this way!

spawning a mob will generate its name and territory if these are not already present

